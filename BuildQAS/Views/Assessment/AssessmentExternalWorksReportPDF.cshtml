@model BuildInspect.Models.ViewModel.AssessmentExternalWorksEntryViewModel
@using BuildInspect.Models.ViewModel
@{
    Layout = null;
    var RowCnt = 1;
    var modRowCnt = 1;
    var ProcessRowCnt = 1;
}
<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>@ViewBag.Title</title>
    <meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.13.1/css/all.min.css">
    <!-- Bootstrap CSS -->
    <link rel="stylesheet" href="https://maxcdn.bootstrapcdn.com/bootstrap/4.0.0/css/bootstrap.min.css" integrity="sha384-Gn5384xqQ1aoWXA+058RXPxPg6fy4IWvTNh0E263XmFcJlSAwiGgFAW/dAiS6JXm" crossorigin="anonymous">
    <!-- Style CSS -->
    <style>
        .datepicker {
            z-index: 99999 !important;
        }

        #ui-datepicker-div {
            width: 30% !important;
        }

        .table-overflow-cont {
            overflow-x: scroll;
            width: 100%;
            overflow-y: visible;
            height: calc(100vh - 44px);
        }

        .min-w-200px {
            min-width: 200px;
        }

        .min-w-150px {
            min-width: 150px;
        }

        .min-w-50px {
            min-width: 50px;
        }
        /* table border css - start */

        table#external-Works-tbl {
            border-collapse: separate;
            border: none;
            border-spacing: 0;
        }

            table#external-Works-tbl tr td {
                padding: 5px;
                border-left: none;
                border-right: 1px solid #000000;
                border-top: none;
                border-bottom: 1px solid #000000;
            }

            table#external-Works-tbl thead tr:first-child td {
                border-top: 1px solid #000000;
            }

            table#external-Works-tbl tbody tr td.sticky-col-1:first-child,
            table#external-Works-tbl thead tr td:first-child,
            table#external-Works-tbl tfoot tr td:first-child {
                border-left: 1px solid #000000;
            }

            table#external-Works-tbl thead tr:first-child td:first-child {
                border-top-left-radius: 5px;
            }

            table#external-Works-tbl thead tr:first-child td:last-child {
                border-top-right-radius: 5px;
            }

            table#external-Works-tbl tfoot tr:last-child td:first-child {
                border-bottom-left-radius: 5px;
            }

            table#external-Works-tbl tfoot tr:last-child td:last-child {
                border-bottom-right-radius: 5px;
            }
        /* table border css - end */
        /* sticky table column - start */

        #external-Works-tbl .sticky-col-1,
        #external-Works-tbl .sticky-col-2,
        #external-Works-tbl .sticky-col-3 {
            position: sticky;
            z-index: 3;
            background-color: #ffffff;
        }

        #external-Works-tbl .sticky-col-1 {
            left: 0;
            text-align: center;
        }

        #external-Works-tbl .sticky-col-2 {
            left: 50px;
        }

        #external-Works-tbl .sticky-col-3 {
            left: calc(50px + 200px);
        }
        /* sticky table column - end */
        /* sticky table row - start */

        #external-Works-tbl thead tr.sticky-row-1 td,
        #external-Works-tbl thead tr.sticky-row-2 td,
        #external-Works-tbl thead tr.sticky-row-3 td,
        #external-Works-tbl thead tr.sticky-row-4 td,
        #external-Works-tbl thead tr.sticky-row-1 td:first-child,
        #external-Works-tbl thead tr.sticky-row-2 td:first-child,
        #external-Works-tbl thead tr.sticky-row-3 td:first-child,
        #external-Works-tbl thead tr.sticky-row-4 td:first-child,
        #external-Works-tbl tfoot tr td:first-child,
        #external-Works-tbl thead tr.sticky-row-1 td:nth-child(2),
        #external-Works-tbl thead tr.sticky-row-2 td:nth-child(2),
        #external-Works-tbl thead tr.sticky-row-3 td:nth-child(2),
        #external-Works-tbl thead tr.sticky-row-1 td:nth-child(3),
        #external-Works-tbl thead tr.sticky-row-2 td:nth-child(3),
        #external-Works-tbl thead tr.sticky-row-3 td:nth-child(3),
        #external-Works-tbl thead tr.sticky-row-4 td:nth-child(2) {
            position: sticky;
            background-color: #ffffff;
        }

        #external-Works-tbl thead tr.sticky-row-1 td,
        #external-Works-tbl thead tr.sticky-row-2 td,
        #external-Works-tbl thead tr.sticky-row-3 td,
        #external-Works-tbl thead tr.sticky-row-4 td {
            /*position: sticky;*/
            z-index: 10;
            /*background-color: #ffffff;*/
        }

            #external-Works-tbl thead tr.sticky-row-1 td:first-child,
            #external-Works-tbl thead tr.sticky-row-2 td:first-child,
            #external-Works-tbl thead tr.sticky-row-3 td:first-child,
            #external-Works-tbl thead tr.sticky-row-4 td:first-child,
            #external-Works-tbl tfoot tr td:first-child {
                /*position: sticky;*/
                left: 0;
                z-index: 11;
                /*background-color: #ffffff;*/
            }

            #external-Works-tbl thead tr.sticky-row-1 td:nth-child(2),
            #external-Works-tbl thead tr.sticky-row-2 td:nth-child(2),
            #external-Works-tbl thead tr.sticky-row-3 td:nth-child(2) {
                /*position: sticky;*/
                left: 50px;
                z-index: 11;
                /*background-color: #ffffff;*/
            }

            #external-Works-tbl thead tr.sticky-row-1 td:nth-child(3),
            #external-Works-tbl thead tr.sticky-row-2 td:nth-child(3),
            #external-Works-tbl thead tr.sticky-row-3 td:nth-child(3),
            #external-Works-tbl thead tr.sticky-row-4 td:nth-child(2) {
                /*position: sticky;*/
                left: 250px;
                z-index: 11;
                /*background-color: #ffffff;*/
            }

        #external-Works-tbl thead tr.sticky-row-1 td {
            top: 0;
        }

        #external-Works-tbl thead tr.sticky-row-2 td {
            top: 36px;
        }

        #external-Works-tbl thead tr.sticky-row-3 td {
            top: 71px;
        }

        #external-Works-tbl thead tr.sticky-row-4 td {
            top: 106px;
        }
        /* sticky table row - end */
        /* vertical text in td -start */

        .verticalTD td:not(:first-child) {
            height: 200px;
            max-width: 50px;
        }

        .verticalTD td span {
            display: block;
            white-space: nowrap;
            transform: rotate(-90deg) translatex(-75px);
        }
        /* vertical text in td -end */
        /* checkbox checkmark - start */

        .tdChechBox {
            min-width: 50px;
            position: relative;
            cursor: pointer;
        }

            .tdChechBox[aria-checked="null"]::before,
            .tdChechBox[aria-checked="null"]::after,
            .tdChechBox[aria-checked="true"]::after,
            .tdChechBox[aria-checked="false"]::before {
                display: none;
            }

            .tdChechBox[aria-checked="true"]::before {
                display: inline-block;
            }

            .tdChechBox[aria-checked="false"]::after {
                display: inline-block;
            }

            .tdChechBox i {
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }

            .tdChechBox:focus {
                outline: none;
            }

            .tdChechBox::before,
            .tdChechBox::after {
                font-family: "Font Awesome 5 Free";
                font-weight: 900;
                position: absolute;
                top: 50%;
                left: 50%;
                transform: translate(-50%, -50%);
            }

            .tdChechBox::before {
                content: "\f00c";
                color: #28a745;
            }

            .tdChechBox::after {
                content: "\f00d";
                color: #dc3545;
            }

            .tdChechBox[disabled=""]::before,
            .tdChechBox[disabled=""]::after {
                color: #545b62;
            }

            .tdChechBox[disabled=""] {
                cursor: not-allowed;
            }
        /* checkbox checkmark - end */

        #external-Works-tbl .selected td {
            background-color: #d1dade;
        }

        .myModel, .mySign {
            top: 0;
            left: 0;
            width: 100vw;
            height: 100vh;
            z-index: 11;
            background-color: rgba(0, 0, 0, 0.25);
            display: none;
        }

        .modelContent {
            background-color: #ffffff;
            max-width: 500px;
        }

        .jSignature {
            width: 300px !important;
            height: 300px !important;
        }

        .logoContainrer {
            background-color: #ffffff;
        }

        .logoContainrer {
            padding: 5px 10px;
            box-shadow: 10px 10px 10px 5px #cccccc;
        }
    </style>

</head>
<body class="hold-transition">
    @using (Html.BeginForm(null, null, FormMethod.Post, new { id = "ExternalWorks_Form", @class = "form-horizontal", enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(model => Model.assessmentExternalWorksIndexViewModel.ProjectID, new { @id = "hdnForProjectID" })
        @Html.HiddenFor(model => Model.MaxProcessCount, new { @id = "hdnForMaxProcessCount" })
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <table id="external-Works-tbl" border="1" style="zoom:80%">
            <tr class="text-center">
                <td class="min-w-50px" style="border:none"></td>
                <td class="min-w-200px text-right" style="border-left: 1px solid #000000;border-top: 1px solid #000000;">
                    Project :
                </td>
                <td colspan="3" class="text-left" style="border-top: 1px solid #000000;">
                    @Model.projectMasterView.Project_Name
                </td>
                <td rowspan="4" colspan="3" style="border:none" valign="middle">
                    <div class="logoContainrer">
                        <img src="~/images/logo.png" width="auto" height="75">
                    </div>
                </td>
            </tr>
            <tr class="text-center">
                <td class="min-w-50px" style="border:none"></td>
                <td class="text-right" style="border-left: 1px solid #000000;">
                    Developer :
                </td>
                <td colspan="3" class="text-left">
                    @Model.projectMasterView.Developer_Name
                </td>
            </tr>
            <tr>
                <td class="min-w-50px" style="border:none"></td>
                <td class="text-right" style="border-left: 1px solid #000000;">
                    Contractor :
                </td>
                <td colspan="3" class="text-left">
                    @Model.projectMasterView.Contractor_Name
                </td>
            </tr>
            <tr>
                <td class="min-w-50px" style="border:none"></td>
                <td class="text-right" style="border-left: 1px solid #000000;">
                    Date of Assessment :
                </td>
                <td colspan="3" class="text-left">
                    @Model.projectMasterView.Assessment_Dates
                </td>
            </tr>
            <tr class="text-left">
                <td colspan="9" style="font-weight:bold;border:none">
                    <br />
                    <u>@ViewBag.Title</u>
                    <br />
                    <br />
                </td>
            </tr>
        </table>
        <table id="external-Works-tbl">
            <tr class="text-center">
                <td colspan="3" class="min-w-150px text-right" style="border-left: 1px solid #000000;border-top: 1px solid #000000;">No. of compliance</td>
                <td colspan="@Model.MaxProcessCount" class="External-Works-Complain text-info font-weight-bold" style="border-top: 1px solid #000000;"></td>
            </tr>
            <tr class="text-center ">
                <td colspan="3" class="text-right" style="border-left: 1px solid #000000;">No. of checks</td>
                <td colspan="@Model.MaxProcessCount" class="External-Works-Check text-info font-weight-bold"></td>
            </tr>
            <tr>
                <td colspan="2" style="border-left: 1px solid #000000;">
                    <div class="">
                        <small>Doc No. @Model.projectMasterView.Project_DocNo</small>
                    </div>
                </td>
                <td class="text-center">
                    <h5>Assessors</h5>
                    @foreach (var item1 in Model.projectMasterView.assessment_project_assessors_detail)
                    {
                        @item1.assessors_master.AssessorsName;
                        <br />
                    }
                </td>
                <td colspan="@Model.MaxProcessCount" class="text-center">Criteria</td>
            </tr>


            @foreach (var trn in Model.assessmentExternalWorksTransMasterViewModels.OrderBy(x => x.AssessmentEWKID))
            {
                <tbody id="tbody_@trn.AssessmentEWKID">
                    <tr class="verticalTD">
                        <td rowspan="3" class="min-w-50px" role="checkbox" aria-checked="false" id="rowId_@trn.AssessmentEWKID" style="border-left: 1px solid #000000;">@RowCnt</td>
                        <td class="sticky-col-2" valign="top">
                            Remarks
                            @if (trn.Drawing_Image != null)
                            {
                                <img src="@trn.Drawing_Image" width="150" height="150">
                            }
                        </td>
                        <td valign="top">@trn.Remarks</td>
                            @foreach (var mod in Model.assessmentTypeModuleMasterViewModels.Where(x => x.AssessmentTypeID == 3).OrderBy(x => x.OrderBy))
                            {
                                foreach (var proc in Model.assessmentTypeModuleProcessMasterViewModels.Where(x => x.AssessmentTypeModuleID == mod.AssessmentTypeModuleID && x.AssessmentTypeLocationID == trn.LocationID).OrderBy(x => x.OrderBy))
                                {
                                    <td><span>@proc.AssessmentTypeModuleProcessName</span></td>
                                }
                            }
                        </tr>
                    <tr>
                        <td>Location</td>
                        <td>@trn.assessment_type_location_master.AssessmentTypeLocationName</td>
                        @foreach (var mod in Model.assessmentTypeModuleMasterViewModels.Where(x => x.AssessmentTypeID == 3).OrderBy(x => x.OrderBy))
                        {
                            {
                                modRowCnt = 0;
                                ProcessRowCnt = 1;
                            }
                            foreach (var proc in Model.assessmentTypeModuleProcessMasterViewModels.Where(x => x.AssessmentTypeModuleID == mod.AssessmentTypeModuleID && x.AssessmentTypeLocationID == trn.LocationID).OrderBy(x => x.OrderBy))
                            {
                                foreach (var trndet in trn.assessment_external_works_trn_detail.Where(x => x.RowNo == 1 && x.AssessmentEWKID == trn.AssessmentEWKID && x.AssessmentTypeModuleProcessID == proc.AssessmentTypeModuleProcessID).OrderBy(x => x.AssessmentEWKDetailID))
                                {
                                    if (Model.projectMasterView.Is_Completed == 1)
                                    {
                                        if (trndet.Result == "1") // Tick
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="true" disabled id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }
                                        else if (trndet.Result == "2") // Cross
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="false" disabled id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }
                                        else // Blank
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="null" disabled id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }

                                    }
                                    else
                                    {
                                        if (trndet.Result == "1") // Tick
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="true" id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }
                                        else if (trndet.Result == "2") // Cross
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="false" id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }
                                        else // Blank
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="null" id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }
                                    }
                                    {
                                        modRowCnt++;
                                        ProcessRowCnt++;
                                    }
                                }
                            }
                            if (@modRowCnt == 0)
                            {
                                <td colspan="@Model.MaxProcessCount"></td>
                            }
                            else if ((@Model.MaxProcessCount - @modRowCnt) > 0)
                            {
                                <td colspan="@Model.MaxProcessCount- @modRowCnt"></td>
                            }
                        }
                    </tr>
                    <tr>
                        <td class="min-w-200px">Date (dd-mmm-yyyy)</td>
                        <td class="min-w-150px">@string.Format("{0:dd-MMM-yyyy}", @trn.AssessmentDate)</td>
                        @foreach (var mod in Model.assessmentTypeModuleMasterViewModels.Where(x => x.AssessmentTypeID == 3).OrderBy(x => x.OrderBy))
                        {
                            {
                                modRowCnt = 0;
                                ProcessRowCnt = 1;
                            }
                            foreach (var proc in Model.assessmentTypeModuleProcessMasterViewModels.Where(x => x.AssessmentTypeModuleID == mod.AssessmentTypeModuleID && x.AssessmentTypeLocationID == trn.LocationID).OrderBy(x => x.OrderBy))
                            {
                                foreach (var trndet in trn.assessment_external_works_trn_detail.Where(x => x.RowNo == 2 && x.AssessmentEWKID == trn.AssessmentEWKID && x.AssessmentTypeModuleProcessID == proc.AssessmentTypeModuleProcessID).OrderBy(x => x.AssessmentEWKDetailID))
                                {
                                    if (Model.projectMasterView.Is_Completed == 1)
                                    {
                                        if (trndet.Result == "1") // Tick
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="true" disabled id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }
                                        else if (trndet.Result == "2") // Cross
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="false" disabled id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }
                                        else // Blank
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="null" disabled id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }

                                    }
                                    else
                                    {
                                        if (trndet.Result == "1") // Tick
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="true" id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }
                                        else if (trndet.Result == "2") // Cross
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="false" id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }
                                        else // Blank
                                        {
                                            <td class="tdChechBox" role="checkbox" aria-checked="null" id="@mod.AssessmentTypeModuleShortName.Replace("&","")_@ProcessRowCnt.ToString()_@trndet.AssessmentEWKDetailID.ToString()"></td>
                                        }
                                    }
                                    {
                                        modRowCnt++;
                                        ProcessRowCnt++;
                                    }
                                }
                            }
                            if (@modRowCnt == 0)
                            {
                                <td colspan="@Model.MaxProcessCount"></td>
                            }
                            else if ((@Model.MaxProcessCount - @modRowCnt) > 0)
                            {
                                <td colspan="@Model.MaxProcessCount- @modRowCnt"></td>
                            }
                        }
                    </tr>
                </tbody>
                {
                    RowCnt++;
                }
            }

            <tr class="text-success font-weight-bold text-center ">
                <td colspan="3" class="text-right" style="border-left: 1px solid #000000;">No. of Ticks</td>
                @for (int i = 1; i <= @Model.MaxProcessCount; i++)
                {
                    <td class="P_@i.ToString()-TickCount text-center"></td>
                }
            </tr>
            <tr class="text-success font-weight-bold text-center ">
                <td colspan="3" class="text-right" style="border-left: 1px solid #000000;">No. of checks</td>
                @for (int i = 1; i <= @Model.MaxProcessCount; i++)
                {
                    <td class="P_@i.ToString()-CheckCount text-center"></td>
                }
            </tr>

        </table>
    }
    <script src="~/Content/assets/js/jquery.min.js"></script>
    <script src="~/Content/assets/js/popper.min.js"></script>
    <script src="~/Content/assets/js/bootstrap.min.js"></script>
    <script>

        onLoadmoduleStatusCount();

        function onLoadmoduleStatusCount() {
            for (let Pi = 1; Pi <= parseInt($('#hdnForMaxProcessCount').val()); Pi++) {
                moduleStatusCount('Criteria_' + Pi);
            }
        }



        /* Module Status Count Function - start */
        function moduleStatusCount(id) {
            let eventidSplit = id.split('_');
            let eventidSplitFirst = eventidSplit[0];
            let eventidSplitLast = eventidSplit[1];
            let module = document.querySelectorAll('[id^="' + eventidSplitFirst + '"]');
            let Complains = 0;
            let Checks = 0;
            let individualCompliance_1 = 0;
            let individualCheck_1 = 0;

            for (let i = 0; i < module.length; i++) {
                let checkBoxValue = module[i].getAttribute('aria-checked');
                let idSplitArray = module[i].id.split('_');
                let idSplitlastIndex = idSplitArray[1];
                if (checkBoxValue == 'true') {
                    Checks++;
                    Complains++;
                    if (idSplitlastIndex == eventidSplitLast) {
                        individualCompliance_1++;
                        individualCheck_1++;
                    }
                }
                else if (checkBoxValue == 'false') {
                    Checks++;
                    if (idSplitlastIndex == eventidSplitLast) {
                        individualCheck_1++;
                    }
                }
            }
            document.querySelector('.External-Works-Complain').innerHTML = Complains;
            document.querySelector('.External-Works-Check').innerHTML = Checks;

            if (eventidSplit.length > 1) {
                document.querySelector('.P_' + eventidSplitLast + '-TickCount').innerHTML = individualCompliance_1;
                document.querySelector('.P_' + eventidSplitLast + '-CheckCount').innerHTML = individualCheck_1;
            }
        }
    </script>
</body>
</html>