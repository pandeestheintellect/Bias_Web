@model BuildInspect.Models.ViewModel.AssessmentWindowMasterViewModel

@{
    Layout = null;
}

<!-- Breadcrumb-->
<div class="row pt-2 pb-2">
    <div class="col-sm-9">
        <h4 class="page-title">Window Update</h4>
        <ol class="breadcrumb">
            <li class="breadcrumb-item">Masters</li>
            <li class="breadcrumb-item"><a href="#" class="WindowIndex">Window List</a></li>
            <li class="breadcrumb-item active" aria-current="page">Window Update</li>
        </ol>
    </div>
</div>
<!-- End Breadcrumb-->

@using (Html.BeginForm(null, null, FormMethod.Post, new { id = "WindowEditForm", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    @Html.HiddenFor(model => model.AssessmentWindowID)
    @Html.HiddenFor(model => model.CreatedBy)
    @Html.HiddenFor(model => model.CreatedDate)
    <div>&nbsp;</div>
    <div class="row">
        <div class="col-lg-12">
            <div class="card">
                <div class="card-body">
                    <h4 class="form-header text-uppercase">
                        <i class="fa fa-user-circle-o"></i>
                        Window Info
                    </h4>
                    <div class="form-group row">
                        <label for="input-1" class="col-sm-2 col-form-label">Window name<span class="symbol required"></span></label>
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.AssessmentWindowName, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.AssessmentWindowName, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-group row">
                        <label for="input-1" class="col-sm-2 col-form-label">Display Order<span class="symbol required"></span></label>
                        <div class="col-sm-10">
                            @Html.EditorFor(model => model.OrderBy, new { htmlAttributes = new { @class = "form-control", @type = "number", @min = "1", @step = "1", @value = "0" } })
                            @Html.ValidationMessageFor(model => model.OrderBy, "", new { @class = "text-danger" })
                        </div>
                    </div>
                    <div class="form-footer">
                        <button type="button" id="btnCancelWindow" class="btn btn-danger WindowIndex"><i class="fa fa-times"></i> CANCEL</button>
                        <button type="button" onclick="WindowUpdate()" id="btnUpdateWindow" class="btn btn-success"><i class="fa fa-check-square-o"></i> UPDATE</button>
                    </div>
                </div>
            </div>
        </div>
    </div><!--End Row-->
}
<!-- End Row-->

<script>
    $().ready(function () {
        $("#WindowEditForm").validate({
            rules: {
                AssessmentWindowName: "required",
                OrderBy: "required"
            },
            messages: {
                AssessmentWindowName: "Please enter your Window Name",
                OrderBy: "Please enter your Display Order",
            }
        });
    });

    function WindowUpdate() {
        if ($('#WindowEditForm').valid()) {
            $.post("Assessment/WindowEdit", $('#WindowEditForm').serialize(), function (data) {
                if (data.value == "OK") {
                    swal($('#AssessmentWindowName').val() + "- Window has been updated!", {
                        icon: "success",
                        timer: 360000
                    });
                    Lobibox.notify('success', {
                        size: 'mini',
                        position: 'top right',
                        msg: $('#AssessmentWindowName').val() + "- Window has been updated!"
                    });
                    $.get("Assessment/WindowIndex", function (data) {
                        $('#page-wrapper').html(data);
                    });
                }
                else if (data.value == "Failed") {
                    swal("Warning!", "Window Updation failed!", "warning");
                    Lobibox.notify('error', {
                        size: 'mini',
                        position: 'top right',
                        msg: "Window Updation failed!"
                    });
                }
                else {
                    swal("Warning!", data.value, "warning");
                    Lobibox.notify('error', {
                        size: 'mini',
                        position: 'top right',
                        msg: data.value
                    });
                }
            });
        }
    }
</script>